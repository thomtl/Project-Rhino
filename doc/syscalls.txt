EAX   EBX   ECX   EDX   NAME                FUNCTION                                        DATA                                RET
0     0     0     0     exit                name
1     0     0     0     Start Task Atomic   Starts atomicity for the current running task
2     0     0     0     End Task Atomic     Ends atomicity for the current running task
3     0     0     0     Get current pid     name                                                                                pid_t
4     A     0     0     waitpid             wait until process with pid A has been Killed   A = pid of process to wait on
5     A     B     0     set task argv       name                                            A = pid B = argv
6     A     0     0     get task argv       name                                            A = pid                             argv
7     A     B     0     set task argc       name                                            A = pid B = argc
8     A     0     0     get task argc       name                                            A = pid                             argc
9     A     B     0     create Process      Create process                                  A = name of process b = &pid
10    A     0     0     kill process        names                                           A = pid
11    A     B     0     chdir               name                                            A = path B = pid                    success
12    A     B     0     getcwd              name                                            A = pointer to buf B = buf length
13    A     0     0     Printc              Prints whats the char in ecx                    A = char code to data
14    0     0     0     Clear Screen        Clears the screen
15    A     B     0     set_term_colour     Sets the colour of the terminal                 A = Foreground B = background
16	  A	  	0	  0     Malloc				malloc											A = size							Pointer to space
17	  A	  	0	  0	    free				free											A = pointer to free
18	  A 	B	  0	    open			    open a file 									A = name of file B = flags  	    fs_node_t of the file
19    A     0     0     close               close a file                                    A = fs_node_t
20    A     B     0     readdir_fs          name                                            A = fd, B = index
21	  A     B     C	    read_fs				name											A = node, B = size, C = buffer		int with status
22    A     B     C     write_fs            name                                            A = node, B = size, C = buffer      int with status
23    0     0     0     getchar             read char from the keyboard                                                         char with ascii code
24    0     0     0     shutdown            shutdown the pc
25    0     0     0     reboot              reboot the pc
26    A     B     0     fstat               name                                            A = fd B = pointer to struct stat   status