EAX   EBX   ECX   EDX   NAME                FUNCTION                                        DATA                                RET
0     0     0     0     Start Task Atomic   Starts atomicity for the current running task
0     1     0     0     End Task Atomic     Ends atomicity for the current running task
0     2     0     0     Exit                Exits the program                                                                   Pointer to task_t
0     3     0     0     Get current pid     name                                                                                pid_t
0     4     A     0     waitpid             wait until process with pid A has been Killed   A = pid of process to wait on
0     5     A     B     set task argv       name                                            A = pid B = argv
0     6     A     0     get task argv       name                                            A = pid                             argv
0     7     A     B     set task argc       name                                            A = pid B = argc
0     8     A     0     get task argc       name                                            A = pid                             argc
0,    9     A     B     create Process      Create process                                  A = name of process b = &pid
0,    10    A     0     kill process        names                                           A = pid
0,    11    A     B     chdir               name                                            A = path B = pid
0,    12    A     B     getcwd              name                                            A = pointer to buf B = buf length
1     1     A     0     Printc              Prints whats the char in ecx                    A = char code to data
1     2     0     0     Clear Screen        Clears the screen
1     3     A     B     set_term_colour     Sets the colour of the terminal                 A = Foreground B = background
2	  1	  	A	  0     Malloc				malloc											A = size							Pointer to space
2	  2	  	A	  0	    free				free											A = pointer to free
3	  1 	A	  B	    open			    open a file 									A = name of file B = flags  	    fs_node_t of the file
3     2     A     0     close               close a file                                    A = fs_node_t
3     3     0     0     readdir_fs          name
4	  A     B     C	    read_fs				name											A = node, B = size, C = buffer		int with status
5     1     0     0     getchar             read char from the keyboard                                                         char with ascii code
6,    0,    0,    0     shutdown            shutdown the pc
6,    1,    0,    0     reboot              reboot the pc